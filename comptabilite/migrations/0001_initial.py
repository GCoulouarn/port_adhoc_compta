# Generated by Django 5.2.6 on 2025-09-12 20:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NatureCompte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('intitule', models.CharField(max_length=255, verbose_name='Intitulé')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Nature de Compte',
                'verbose_name_plural': 'Natures de Compte',
                'db_table': 'T_E_NatureCompte_NCT',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Societe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Code')),
                ('intitule', models.CharField(max_length=255, verbose_name='Intitulé')),
                ('groupe', models.BooleanField(default=False, verbose_name='Groupe')),
                ('archive', models.BooleanField(blank=True, null=True, verbose_name='Archivé')),
                ('devise_id', models.IntegerField(blank=True, null=True, verbose_name='ID Devise')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Société',
                'verbose_name_plural': 'Sociétés',
                'db_table': 'T_E_Societe_SOC',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Stade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Code')),
                ('intitule', models.CharField(max_length=255, verbose_name='Intitulé')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Stade',
                'verbose_name_plural': 'Stades',
                'db_table': 'T_E_Stade_STA',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='TypeValeur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('intitule', models.CharField(max_length=255, verbose_name='Intitulé')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Type de Valeur',
                'verbose_name_plural': 'Types de Valeur',
                'db_table': 'T_E_TypeValeur_TYV',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='PlanCompteGroupe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('intitule', models.CharField(max_length=255, verbose_name='Intitulé')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_maj', models.DateTimeField(auto_now=True)),
                ('nature_compte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptabilite.naturecompte', verbose_name='Nature de Compte')),
                ('societe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptabilite.societe', verbose_name='Société')),
            ],
            options={
                'verbose_name': 'Groupe de Plan Comptable',
                'verbose_name_plural': 'Groupes de Plan Comptable',
                'db_table': 'T_E_PlanCompteGroupe_PLG',
                'ordering': ['societe', 'code'],
                'unique_together': {('societe', 'code')},
            },
        ),
        migrations.CreateModel(
            name='PlanCompteLocal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compte', models.CharField(max_length=20, verbose_name='Compte')),
                ('intitule', models.CharField(max_length=255, verbose_name='Intitulé')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_maj', models.DateTimeField(auto_now=True)),
                ('groupe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptabilite.plancomptegroupe', verbose_name='Groupe')),
                ('societe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptabilite.societe', verbose_name='Société')),
            ],
            options={
                'verbose_name': 'Compte Local',
                'verbose_name_plural': 'Comptes Locaux',
                'db_table': 'T_E_PlanCompteLocal_PCL',
                'ordering': ['societe', 'compte'],
                'unique_together': {('societe', 'compte')},
            },
        ),
        migrations.CreateModel(
            name='Tiers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, verbose_name='Code')),
                ('intitule', models.CharField(max_length=255, verbose_name='Intitulé')),
                ('adresse', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('societe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptabilite.societe', verbose_name='Société')),
            ],
            options={
                'verbose_name': 'Tiers',
                'verbose_name_plural': 'Tiers',
                'db_table': 'T_E_Tiers_TIE',
                'ordering': ['societe', 'code'],
                'unique_together': {('societe', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('intitule', models.CharField(max_length=255, verbose_name='Intitulé')),
                ('date_debut', models.DateField(verbose_name='Date de Début')),
                ('date_fin', models.DateField(verbose_name='Date de Fin')),
                ('cloture', models.BooleanField(default=False, verbose_name='Clôturé')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('societe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptabilite.societe', verbose_name='Société')),
            ],
            options={
                'verbose_name': 'Version/Exercice',
                'verbose_name_plural': 'Versions/Exercices',
                'db_table': 'T_E_Versions_VER',
                'ordering': ['societe', '-date_debut'],
                'unique_together': {('societe', 'code')},
            },
        ),
        migrations.CreateModel(
            name='FinanceFaits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periode', models.IntegerField(verbose_name='Période')),
                ('stade_periode', models.IntegerField(verbose_name='Stade Période')),
                ('debit', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Débit')),
                ('credit', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Crédit')),
                ('solde', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Solde')),
                ('debit_local', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Débit Local')),
                ('credit_local', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Crédit Local')),
                ('solde_local', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Solde Local')),
                ('journal_numero', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numéro Journal')),
                ('date_ecriture', models.DateField(verbose_name='Date Écriture')),
                ('intitule_ecriture', models.CharField(max_length=500, verbose_name='Intitulé Écriture')),
                ('axe1_id', models.IntegerField(blank=True, null=True, verbose_name='Axe 1')),
                ('axe2_id', models.IntegerField(blank=True, null=True, verbose_name='Axe 2')),
                ('axe3_id', models.IntegerField(blank=True, null=True, verbose_name='Axe 3')),
                ('version_cloture', models.BooleanField(blank=True, null=True, verbose_name='Version Clôturée')),
                ('lot_id', models.IntegerField(blank=True, null=True, verbose_name='ID Lot')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('groupe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptabilite.plancomptegroupe', verbose_name='Groupe')),
                ('compte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptabilite.plancomptelocal', verbose_name='Compte')),
                ('societe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptabilite.societe', verbose_name='Société')),
                ('societe_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finance_faits_destination', to='comptabilite.societe', verbose_name='Société Destination')),
                ('stade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptabilite.stade', verbose_name='Stade')),
                ('tiers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='comptabilite.tiers', verbose_name='Tiers')),
                ('tiers_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='finance_faits_tiers_2', to='comptabilite.tiers', verbose_name='Tiers 2')),
                ('type_valeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptabilite.typevaleur', verbose_name='Type de Valeur')),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptabilite.version', verbose_name='Version')),
            ],
            options={
                'verbose_name': 'Écriture Comptable',
                'verbose_name_plural': 'Écritures Comptables',
                'db_table': 'T_E_FinanceFaits_FIN',
                'ordering': ['-date_ecriture', 'societe', 'compte'],
                'indexes': [models.Index(fields=['societe', 'date_ecriture'], name='T_E_Finance_societe_6cbbf0_idx'), models.Index(fields=['compte', 'date_ecriture'], name='T_E_Finance_compte__ffdc02_idx'), models.Index(fields=['version', 'stade'], name='T_E_Finance_version_31a2f9_idx')],
            },
        ),
    ]
